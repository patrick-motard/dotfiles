# WARNING: Do not bind C-M!! The terminal sees this as <return> being pressed.
# If you set it on accident, you will need to manually unset it :unset -m C-M,
# or start a new session.

#--------------------------------------------
#      ~ Options ~
#--------------------------------------------
set -g history-limit 50000
# Increase tmux message display duration.
set -g display-time 3000
# Refresh 'status-left' and 'status-right' more often, from every 15s to 5s
set -g status-interval 5
# Needed for neovim
# Suggested by lazyvim's :checkhealth
set -sg escape-time 10
set -g focus-events on
# True color settings
set -s default-terminal 'tmux-256color'
set -sa terminal-features ',tmux-256color:RGB'
set -as terminal-overrides ',alacritty*:Tc'

set -g mode-keys vi
# End Neovim Specific
# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on
# Enable mouse mode (tmux 2.1 and above)
set -g mouse on
# Position of status bar
set -g status-position top
set -g status-right ''
set -g status-left '#{tmux_mode_indicator}  '
# Used for sesh.
set -g detach-on-destroy off  # don't exit from tmux when closing a session

#--------------------------------------------
#      ~ Keybinds ~
#--------------------------------------------

# Reload Config
bind-key r source-file ~/.local/share/chezmoi/dot_tmux.conf \; display-message "~/.tmux.conf reloaded"
bind-key M split-window -h "vim ~/.tmux.conf"

# Vim Copy Settings
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind P paste-buffer
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# Leader Key
set -g prefix C-t
bind-key C-t send-prefix
# set -g prefix C-Space
# bind-key C-Space send-prefix

# RESIZE PANELS
#
# By 5 Pixels
bind-key -r -T prefix       C-Up              resize-pane -U 5
bind-key -r -T prefix       C-Down            resize-pane -D 5
bind-key -r -T prefix       C-Left            resize-pane -L 5
bind-key -r -T prefix       C-Right           resize-pane -R 5

# By 1 Pixels
bind-key -r -T prefix       M-m               resize-pane -L
bind-key -r -T prefix       M-n               resize-pane -D
bind-key -r -T prefix       M-e               resize-pane -U
bind-key -r -T prefix       M-i               resize-pane -R

# Panes

# alt mnei to select panes without leader
bind-key -n M-m select-pane -L
bind-key -n M-n select-pane -D
bind-key -n M-e select-pane -U
bind-key -n M-i select-pane -R

# Select Pane using Leader.
bind m select-pane -L
bind n select-pane -D
bind e select-pane -U
bind i select-pane -R

# Create Pane panes using / and -
unbind '"'
unbind %
# Vertical
bind / split-window -h -c "#{pane_current_path}"
# Horizontal
bind - split-window -v -c "#{pane_current_path}"

# Windows
# ------------------------------------------------------

# Create
bind c new-window -c "#{pane_current_path}"
# Next
bind-key -n M-I next-window
# Previous
bind-key -n M-M previous-window

# # Move Window Left
# bind-key -n M-M swap-window -t -1
# # Move Window Right
# bind-key -n M-I swap-window -t +1
#
# Misc
# ------------------------------------------------------
# Not sure how this got set in the first place.
unbind -n Tab

# ------------------------------------------------------
# Session Management
# ------------------------------------------------------

# Switch to last active session
# bind t switch-client -l
bind -N "last-session (via sesh) " t run-shell "sesh last"

# Sesh session selector
bind-key "s" run-shell -b "sesh connect \"$(
  sesh list --icons | fzf-tmux -p 80%,70% \
    --no-sort --ansi --border-label ' sesh ' --prompt '‚ö°  ' \
    --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
    --bind 'tab:down,btab:up' \
    --bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list --icons)' \
    --bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t --icons)' \
    --bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c --icons)' \
    --bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z --icons)' \
    --bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(‚ö°  )+reload(sesh list --icons)' \
    --preview-window 'right:55%' \
    --preview 'sesh preview {}'
)\""

# example of starting a session using output of ls to select from.
# bind-key 'f' run-shell -b "sesh connect \"$(ls | fzf-tmux --ansi --bind 'tab:down,btab:up')\""

# Tmux Gruvbox Plugin Settings
set -g @gruvbox_flavour 'dark'
set -g @gruvbox_window_left_separator "ÓÇ∫‚ñà"
set -g @gruvbox_window_right_separator "‚ñàÓÇº "
set -g @gruvbox_window_number_position "right"
set -g @gruvbox_window_middle_separator "  ÓÇ∫‚ñà"

set -g @gruvbox_window_default_fill "number"

set -g @gruvbox_window_current_fill "number"
set -g @gruvbox_window_current_text "#{s|$HOME|~|;s|/.*/|/‚Ä¶/|:pane_current_path}"
set -g @gruvbox_status_modules_right "application session"
set -g @gruvbox_status_left_separator  "ÓÇ∫‚ñà"
set -g @gruvbox_status_right_separator "‚ñàÓÇº "
set -g @gruvbox_status_right_separator_inverse "no"
set -g @gruvbox_status_fill "all"
set -g @gruvbox_status_connect_separator "no"
# Plugins
# ------------------------------------------------------
# Instructions for Tmux Plugin Manager (TPM)
# https://github.com/tmux-plugins/tpm?tab=readme-ov-file#installing-plugins
set -g @plugin 'tmux-plugins/tpm'


#  Leader + Space to show the menu.
set -g @plugin 'z3z1ma/tmux-gruvbox'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# Resources
# ------------------------------------------------------
# https://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/

# Notes
# ------------------------------------------------------
# -r allows the keybind to repeat without having to hit the leader
# key again.
# The C- portion of this keybind allows you to continue holding down
# control and hit multiple <spc>+a/t to cycle through windows as opposed
# to repaeting a/t which can som  etimes be faster.
# bind -r C-t next-window
# bind -r C-a previous-window
#
# vim:syntax=tmux

